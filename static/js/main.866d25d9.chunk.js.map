{"version":3,"sources":["components/Header/index.js","pages/About.js","utils/API.js","components/Project/index.js","pages/Portfolio.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","Jumbotron","as","className","fluid","Container","Col","sm","md","Nav","fill","variant","defaultActiveKey","Item","Link","to","eventKey","About","Row","Figure","Image","alt","src","Caption","href","target","rel","icon","size","fixedWidth","lg","ListGroup","horizontal","email","tel","repo","axios","get","Project","name","useState","repoInfo","setRepoInfo","useEffect","API","then","res","data","catch","err","console","log","Card","homepage","Img","Body","Title","split","join","Text","description","html_url","Portfolio","xs","map","key","Footer","library","add","fab","faFilePdf","faEnvelopeOpenText","faPhoneSquare","faLaptopCode","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.866d25d9.chunk.js","sourcesContent":["import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\n\nfunction Header() {\n  return (\n    <Jumbotron as=\"header\" className=\"bg-secondary pb-0\" fluid>\n      <Container>\n        <h1 className=\"text-primary\">Thaddeus Cole</h1>\n        <Col sm={7} md={6}>\n          <Nav fill variant=\"tabs\" defaultActiveKey=\"/about\">\n            <Nav.Item>\n              <Nav.Link\n                as={Link}\n                to=\"/about\"\n                eventKey=\"/about\"\n                // className=\"bg-warning\"\n              >\n                About\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                as={Link}\n                to=\"/portfolio\"\n                eventKey=\"/portfolio\"\n                // className=\"bg-warning\"\n              >\n                Portfolio\n              </Nav.Link>\n            </Nav.Item>\n            {/* <Nav.Item>\n              <Nav.Link as={Link} to=\"/contact\" eventKey=\"/contact\">\n                Contact\n              </Nav.Link>\n            </Nav.Item> */}\n          </Nav>\n        </Col>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Figure from \"react-bootstrap/Figure\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Obfuscate from \"react-obfuscate\";\nimport \"./about.css\";\n\nfunction About() {\n  return (\n    <Container>\n      <Row>\n        <Col md={true} className=\"text-center\">\n          <Figure>\n            <Figure.Image\n              alt=\"Thaddeus Cole Profile Pic\"\n              src=\"https://pbs.twimg.com/profile_images/814979740935290881/yxYJg4Av_400x400.jpg\"\n            />\n            <Figure.Caption className=\"text-center\">\n              {/* github icon link */}\n              <a\n                href=\"https://github.com/thadkingcole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon\n                  icon={[\"fab\", \"github-square\"]}\n                  size=\"3x\"\n                  fixedWidth\n                  className=\"github social\"\n                />\n              </a>\n              {/* linkedin icon link */}\n              <a\n                href=\"https://www.linkedin.com/in/thaddeuscole/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon\n                  icon={[\"fab\", \"linkedin\"]}\n                  size=\"3x\"\n                  fixedWidth\n                  className=\"linkedin social\"\n                />\n              </a>\n              {/* twitter icon link */}\n              <a\n                href=\"https://twitter.com/thadkingcole\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon\n                  icon={[\"fab\", \"twitter-square\"]}\n                  size=\"3x\"\n                  fixedWidth\n                  className=\"twitter social\"\n                />\n              </a>\n              {/* instagram icon link */}\n              <a\n                href=\"https://www.instagram.com/thadkingcole/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon\n                  icon={[\"fab\", \"instagram-square\"]}\n                  size=\"3x\"\n                  fixedWidth\n                  className=\"instagram social\"\n                />\n              </a>\n            </Figure.Caption>\n          </Figure>\n        </Col>\n        <Col md={true}>\n          <p>\n            My name is Thad, and I am a full-stack web developer with a passion\n            for solving problems with code.\n          </p>\n          <p>\n            Graduate of the Coding Bootcamp at UNC Chapel Hill with skills in\n            HTML, CSS/Bootstrap, JavaScript/jQuery/React, and Python, I\n            specialize in building web applications with a responsive, intuitive\n            front-end and a robust, reliable back-end.\n          </p>\n          <p>\n            I leverage my background in nuclear operations to remain calm under\n            pressure, think critically, learn quickly, and work as either a\n            teammate or team leader to achieve a common goal.\n          </p>\n          <p>\n            I am eager to combine my background in nuclear operations with my\n            technical skills to build exciting products as part of a fast-paced\n            results-driven engineering team.\n          </p>\n        </Col>\n        <Col lg={3}>{/* offset column on >lg screens */}</Col>\n      </Row>\n      <Row>\n        <Col>\n          <ListGroup\n            horizontal=\"md\"\n            className=\"justify-content-center text-center\"\n          >\n            <ListGroup.Item>\n              <FontAwesomeIcon icon=\"file-pdf\" size=\"lg\" fixedWidth />\n              <a\n                href=\"https://docs.google.com/document/d/e/2PACX-1vR35XzZsNqcDeqOTepYBJYGEVpKAcWf_zAfpfATAFN0lL92mmtRklQ4ONXJ8h6RgXC6NSdtyYJlPQWK/pub\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Resume\n              </a>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <FontAwesomeIcon icon=\"envelope-open-text\" size=\"lg\" fixedWidth />\n              <Obfuscate email=\"thadjcole@gmail.com\" />\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <FontAwesomeIcon icon=\"phone-square\" size=\"lg\" fixedWidth />\n              <Obfuscate tel=\"423-202-1787\" />\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default About;\n","import axios from \"axios\";\n\nexport default {\n  // get info from repo\n  getRepo: (repo) => {\n    return axios.get(`https://api.github.com/repos/thadkingcole/${repo}`);\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport API from \"../../utils/API\";\n\nfunction Project({ name }) {\n  const [repoInfo, setRepoInfo] = useState(name);\n\n  useEffect(() => {\n    API.getRepo(name)\n      .then((res) => {\n        setRepoInfo(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [name]);\n\n  return (\n    <Card className=\"mb-5\">\n      <Card.Link href={repoInfo.homepage} target=\"_blank\">\n        <Card.Img\n          variant=\"top\"\n          src={`https://raw.githubusercontent.com/thadkingcole/${name}/master/public/images/screenshot.png`}\n        />\n      </Card.Link>\n      <Card.Body>\n        <Card.Title className=\"text-center text-capitalize\">\n          {name.split(\"_\").join(\" \")}\n        </Card.Title>\n        <Card.Text>{repoInfo.description}</Card.Text>\n      </Card.Body>\n      <ListGroup className=\"list-group-flush\">\n        <ListGroup.Item>\n          <FontAwesomeIcon\n            icon=\"laptop-code\"\n            size=\"lg\"\n            className=\"mr-1\"\n            fixedWidth\n          />\n          <Card.Link href={repoInfo.homepage} target=\"_blank\">\n            Deployed Site\n          </Card.Link>\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <FontAwesomeIcon\n            icon={[\"fab\", \"github-square\"]}\n            size=\"lg\"\n            className=\"mr-1\"\n            fixedWidth\n          />\n          <Card.Link href={repoInfo.html_url} target=\"_blank\">\n            Github Repo\n          </Card.Link>\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n}\n\nexport default Project;\n","import React from \"react\";\nimport Project from \"../components/Project\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./portfolio.css\";\n\nfunction Portfolio() {\n  // these are the 6 repos I want to display (in order)\n  const repos = [\n    \"yard-pal\",\n    \"symptom_tracker\",\n    \"is_it_open\",\n    \"weather_dashboard\",\n    \"emdir\",\n    \"noted\",\n  ];\n\n  return (\n    <Container>\n      <Row xs={1} sm={2} lg={3}>\n        {repos.map((repo) => {\n          return (\n            <Col key={repo}>\n              <Project name={repo} />\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Portfolio;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Footer() {\n  return (\n    <Jumbotron\n      fluid\n      as=\"footer\"\n      className=\"bg-dark mb-0 py-2 fixed-bottom text-center text-info\"\n    >\n      <Container>\n        <small>Copyright &copy; Thaddeus Cole</small>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\n// import Contact from \"./pages/Contact\";\nimport Footer from \"./components/Footer\";\n// import desired icons from font awesome for use anywhere in the app\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faFilePdf,\n  faEnvelopeOpenText,\n  faPhoneSquare,\n  faLaptopCode,\n} from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(fab, faFilePdf, faEnvelopeOpenText, faPhoneSquare, faLaptopCode);\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main className=\"mb-5\">\n        <Switch>\n          <Route exact path={[\"/\", \"/about\"]} component={About} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          {/* <Route exact path=\"/contact\" component={Contact} /> */}\n        </Switch>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./custom.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}